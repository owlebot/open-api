{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"PlatformEnum": {
				"enum": [
					"discord",
					"twitch"
				],
				"type": "string"
			},
			"Account": {
				"properties": {
					"id": {
						"type": "string"
					},
					"type": {
						"$ref": "#/components/schemas/PlatformEnum"
					},
					"pseudo": {
						"type": "string"
					},
					"image": {
						"type": "string"
					},
					"xp": {
						"type": "number",
						"format": "double"
					},
					"primary": {
						"type": "boolean"
					},
					"activated": {
						"type": "boolean"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"id",
					"type",
					"pseudo",
					"xp",
					"primary",
					"activated",
					"createdAt",
					"updatedAt"
				],
				"type": "object",
				"additionalProperties": false
			},
			"User": {
				"properties": {
					"id": {
						"type": "string"
					},
					"accounts": {
						"items": {
							"$ref": "#/components/schemas/Account"
						},
						"type": "array"
					},
					"premium": {
						"type": "boolean"
					},
					"money": {
						"type": "number",
						"format": "double"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"id",
					"accounts",
					"premium",
					"money",
					"createdAt",
					"updatedAt"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Pick_Account.id-or-type-or-pseudo-or-image_": {
				"properties": {
					"id": {
						"type": "string"
					},
					"type": {
						"$ref": "#/components/schemas/PlatformEnum"
					},
					"pseudo": {
						"type": "string"
					},
					"image": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"type",
					"pseudo"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"AccountCreationParams": {
				"$ref": "#/components/schemas/Pick_Account.id-or-type-or-pseudo-or-image_"
			}
		},
		"securitySchemes": {
			"api_key": {
				"type": "apiKey",
				"name": "access_token",
				"in": "header"
			}
		}
	},
	"info": {
		"title": "@owlebot/open-api",
		"version": "0.1.0",
		"description": "Owlebot open API.",
		"license": {
			"name": "MIT"
		},
		"contact": {}
	},
	"openapi": "3.0.0",
	"paths": {
		"/users/{userId}": {
			"get": {
				"operationId": "GetUser",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/User"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "userId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/users": {
			"post": {
				"operationId": "CreateUser",
				"responses": {
					"201": {
						"description": "User created"
					}
				},
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AccountCreationParams"
							}
						}
					}
				}
			}
		}
	},
	"servers": [
		{
			"url": "https://localhost:3000/v1"
		}
	]
}